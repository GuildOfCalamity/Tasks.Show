<UserControl
    x:Class="Tasks.Show.Views.TaskView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:Tasks.Show.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:h="clr-namespace:Tasks.Show.Helpers"
    xmlns:helpers="clr-namespace:Tasks.Show.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:u="clr-namespace:Tasks.Show.UserControls"
    xmlns:utils="clr-namespace:Tasks.Show.Utils"
    xmlns:vm="clr-namespace:Tasks.Show.ViewModels"
    xmlns:wpf="clr-namespace:PixelLab.Wpf;assembly=PixelLab.Wpf"
    mc:Ignorable="d">

    <Grid>
        <Grid.Resources>

            <utils:PrettyDateConverter x:Key="PrettyDateConverter" ShowOverdue="False" />

        </Grid.Resources>

        <Grid x:Name="LayoutRoot" MinHeight="58">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="41" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Border
                Grid.Row="1"
                Grid.ColumnSpan="5"
                Height="5"
                Margin="0,0,1,-5"
                VerticalAlignment="Bottom"
                BorderBrush="#60000000"
                BorderThickness="0,1.5,0,0"
                IsHitTestVisible="False">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#18000000" />
                        <GradientStop Offset="1" Color="#0000" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>

            <!--  Background  -->
            <Border
                Grid.RowSpan="2"
                Grid.ColumnSpan="3"
                Background="#D0EBEFF0" />
            <Border
                Grid.RowSpan="2"
                Grid.Column="3"
                Grid.ColumnSpan="2"
                Background="#D0D6DCDE" />

            <!--  FolderColor  -->
            <Border
                Grid.RowSpan="2"
                Grid.Column="0"
                Width="10"
                HorizontalAlignment="Left"
                Background="{Binding Path=Task.Folder.Color, Converter={x:Static wpf:ColorBrushConverter.Instance}}" />

            <!--  Edges  -->
            <Border
                Grid.RowSpan="100"
                Grid.ColumnSpan="3"
                Width="10"
                Margin="0,0,0,0"
                HorizontalAlignment="Left"
                BorderThickness="0,1.5">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#40FFFFFF" />
                        <GradientStop Offset="1" Color="#20000000" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Border
                Grid.RowSpan="100"
                Grid.ColumnSpan="3"
                Margin="10,0,0,0"
                BorderThickness="0,1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#FFFFFFFF" />
                        <GradientStop Offset="1" Color="#20000000" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>
            <Border
                Grid.RowSpan="100"
                Grid.Column="3"
                Grid.ColumnSpan="2"
                BorderThickness="0,1">
                <Border.BorderBrush>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Offset="0" Color="#80FFFFFF" />
                        <GradientStop Offset="1" Color="#20000000" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
            </Border>

            <!--  Delete Button  -->
            <Button
                Grid.RowSpan="2"
                Grid.Column="2"
                Width="40"
                Height="40"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Click="Button_Click"
                IsEnabled="{Binding IsMouseOver, ElementName=LayoutRoot}"
                Style="{StaticResource OpacityButton}"
                ToolTip="Delete This Task">
                <Border HorizontalAlignment="Center" VerticalAlignment="Center">
                    <c:PixelAlignedImage Source="{StaticResource DeleteXImageSource}" />
                </Border>
            </Button>

            <!--  IsComplete  -->
            <CheckBox
                Grid.RowSpan="3"
                Grid.Column="1"
                Margin="-4,-1,4,0"
                VerticalAlignment="Center"
                IsChecked="{Binding Path=Task.Completed, Converter={x:Static helpers:BoolToNullableDateTimeConverter.Instance}}"
                Style="{StaticResource CompletedCheckBox}"
                ToolTip="Completed" />

            <!--  Description  -->
            <c:EditableTextBlock
                Grid.Column="2"
                Margin="-6,4,40,-4"
                VerticalAlignment="Bottom"
                Text="{Binding Task.Description}"
                TextWrapping="Wrap">
                <c:EditableTextBlock.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="SnapsToDevicePixels" Value="True" />
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}" />
                        <Setter Property="FontSize" Value="17" />
                        <Setter Property="FontWeight" Value="Light" />
                        <Setter Property="AllowDrop" Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <Border x:Name="Border" Background="#00FFFFFF">
                                        <Grid>
                                            <ScrollViewer x:Name="PART_ContentHost" Margin="6,2,6,4" />
                                            <TextBlock
                                                x:Name="InvisibleText"
                                                HorizontalAlignment="Left"
                                                IsHitTestVisible="False"
                                                Opacity="0"
                                                Text="{TemplateBinding Text}" />
                                            <Rectangle
                                                x:Name="CrossoutRectangle"
                                                Width="{Binding ActualWidth, ElementName=InvisibleText}"
                                                Height="1"
                                                Margin="8,2,4,-2"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Fill="#C02A2F31"
                                                IsHitTestVisible="False"
                                                Visibility="Collapsed" />
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                                            <Setter TargetName="Border" Property="BorderBrush" Value="#EEEEEE" />
                                            <Setter Property="Foreground" Value="#606060" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </c:EditableTextBlock.Style>
            </c:EditableTextBlock>

            <!--  Drag Grip  -->
            <Border
                Grid.RowSpan="2"
                wpf:ReorderListBox.IsDragElement="True"
                Background="#00FFFFFF"
                Cursor="SizeAll"
                DataContext="{Binding Task}">
                <Border
                    Margin="4,0,-4,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <c:PixelAlignedImage Source="{StaticResource GripImageSource}" />
                </Border>
            </Border>

            <!--  Due Date  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="2"
                Margin="2,0,0,0"
                VerticalAlignment="Top"
                Orientation="Horizontal"
                ToolTip="Due Date"
                Visibility="{Binding Task.IsComplete, Converter={StaticResource ReverseBooleanToVisibilityConverter}}">
                <TextBlock
                    VerticalAlignment="Center"
                    FontSize="14"
                    Foreground="#D0252b2d"
                    Text="by" />
                <u:DateDropDown
                    Margin="-4,0,0,0"
                    Date="{Binding Task.Due, Mode=TwoWay}"
                    FontSize="14"
                    FontWeight="Bold"
                    ShowOverdue="True" />
            </StackPanel>

            <!--  Completed  -->
            <StackPanel
                Grid.Row="1"
                Grid.Column="2"
                Margin="2,0,0,0"
                VerticalAlignment="Top"
                Orientation="Horizontal"
                ToolTip="Date Completed"
                Visibility="{Binding Task.IsComplete, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock
                    VerticalAlignment="Center"
                    FontSize="14"
                    Foreground="#D0252b2d"
                    Text="completed" />
                <TextBlock
                    Margin="4,0,0,0"
                    VerticalAlignment="Center"
                    FontSize="14"
                    FontWeight="Bold"
                    Foreground="#000000"
                    Text="{Binding Task.Completed, Converter={StaticResource PrettyDateConverter}}" />
            </StackPanel>

            <Grid Grid.RowSpan="2" Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <!--  Folder Name  -->
                <StackPanel
                    Grid.Row="0"
                    Margin="24,2,24,-2"
                    VerticalAlignment="Bottom"
                    Opacity="{Binding Task.IsComplete, Converter={StaticResource DimCompleteItemConverter}}"
                    Orientation="Horizontal"
                    ToolTip="Folder">
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="14"
                        Foreground="#D0252b2d"
                        Text="in" />
                    <u:FolderDropDown
                        Margin="-4,0,0,0"
                        FontSize="14"
                        FontWeight="Bold"
                        RequestFolderChange="FolderDropDown_RequestFolderChange" />
                </StackPanel>

                <!--  Time to Complete  -->
                <StackPanel
                    Grid.Row="1"
                    Margin="24,0,24,0"
                    VerticalAlignment="Top"
                    Opacity="{Binding Task.IsComplete, Converter={StaticResource DimCompleteItemConverter}}"
                    Orientation="Horizontal"
                    ToolTip="Time To Complete">
                    <TextBlock
                        VerticalAlignment="Center"
                        FontSize="14"
                        Foreground="#D0252b2d"
                        Text="for" />
                    <u:TimeSpanDropDown
                        Margin="-4,0,0,0"
                        FontSize="14"
                        FontWeight="Bold"
                        Duration="{Binding Task.Estimate, Mode=TwoWay}" />
                </StackPanel>

            </Grid>

            <!--  IsImportant  -->
            <c:ReverseThreeStateCheckBox
                Grid.RowSpan="100"
                Grid.Column="5"
                Cursor="Hand"
                IsChecked="{Binding Task.IsImportant}"
                IsEnabled="{Binding IsMouseOver, ElementName=LayoutRoot}"
                IsThreeState="True"
                ToolTip="Priority">
                <c:ReverseThreeStateCheckBox.Style>
                    <Style TargetType="CheckBox">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="CheckBox">
                                    <Grid Background="#20888C8D">
                                        <Border
                                            x:Name="NullImage"
                                            Width="15"
                                            Height="15"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Visibility="Visible">
                                            <c:PixelAlignedImage Source="..\Images\check_null.png" />
                                        </Border>
                                        <Border
                                            x:Name="TrueImage"
                                            Width="15"
                                            Height="15"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Visibility="Collapsed">
                                            <c:PixelAlignedImage Source="..\Images\check_true.png" />
                                        </Border>
                                        <Border
                                            x:Name="FalseImage"
                                            Width="15"
                                            Height="15"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Visibility="Collapsed">
                                            <c:PixelAlignedImage Source="..\Images\check_false.png" />
                                        </Border>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="NullImage"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To="0.0"
                                                            Duration="00:00:00.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="NullImage"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To="0.5"
                                                            Duration="00:00:00.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="NullImage"
                                                            Storyboard.TargetProperty="Opacity"
                                                            To="1.0"
                                                            Duration="00:00:00.2" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            Storyboard.TargetName="NullImage"
                                                            Storyboard.TargetProperty="Opacity"
                                                            Duration="00:00:00.1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter TargetName="TrueImage" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="NullImage" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter TargetName="FalseImage" Property="Visibility" Value="Visible" />
                                            <Setter TargetName="NullImage" Property="Visibility" Value="Collapsed" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>

                        </Setter>
                    </Style>
                </c:ReverseThreeStateCheckBox.Style>
            </c:ReverseThreeStateCheckBox>

        </Grid>

    </Grid>

</UserControl>
