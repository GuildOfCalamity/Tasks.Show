<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:c="clr-namespace:Tasks.Show.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:h="clr-namespace:Tasks.Show.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:pl="clr-namespace:PixelLab.Wpf;assembly=PixelLab.Wpf"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:u="clr-namespace:Tasks.Show.Utils"
    mc:Ignorable="d">

    <!--
        ***************************************************************************
        Typography
        ***************************************************************************
    -->

    <FontFamily x:Key="PrimaryFontFamily">..\Fonts\#Segoe UI</FontFamily>
    <FontFamily x:Key="IconFontFamily">..\Fonts\#Segoe Fluent Icons</FontFamily>

    <!--
        ***************************************************************************
        Image Sources
        ***************************************************************************
    -->

    <BitmapImage x:Key="DeleteXImageSource" UriSource="..\Images\delete_x.png" />
    <BitmapImage x:Key="GripImageSource" UriSource="..\Images\grip.png" />
    <BitmapImage x:Key="GripDarkImageSource" UriSource="..\Images\grip_dark.png" />
    <BitmapImage x:Key="WarningImageSource" UriSource="..\Images\warning.png" />

    <!--
        ***************************************************************************
        Brushes
        ***************************************************************************
    -->

    <Color x:Key="Primary">#33383B</Color>
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource Primary}" />
    <Color x:Key="Secondary">#93989B</Color>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource Secondary}" />


    <h:ColorList x:Key="FolderColors">
        <Color>#00acff</Color>
        <Color>#357e7f</Color>
        <Color>#004a7f</Color>
        <Color>#529010</Color>
        <Color>#165F00</Color>
        <Color>#b1c70c</Color>
        <Color>#ffc511</Color>
        <Color>#fb791a</Color>
        <Color>#f24e22</Color>
        <Color>#A84300</Color>
        <Color>#da1a4c</Color>
        <Color>#6f0000</Color>
        <Color>#d200ef</Color>
        <Color>#67208f</Color>
        <Color>#4820ff</Color>
        <Color>#00FFFFFF</Color>
    </h:ColorList>

    <!--
        ***************************************************************************
        Geometry
        ***************************************************************************
    -->

    <Geometry x:Key="DownArrow">M0,0 L1,0 0.5,1Z</Geometry>
    <Geometry x:Key="UpArrow">M0,1 L1,1 0.5,0Z</Geometry>
    <Geometry x:Key="RightArrow">M0,0 L1,0.5 0,1Z</Geometry>
    <Geometry x:Key="LeftArrow">M0,0.5 L1,1 1,0Z</Geometry>
    <Geometry x:Key="CloseX">M0,0 L1,1 M0,1 L1,0</Geometry>
    <Geometry x:Key="HorizontalLine">M0,0 L0,1</Geometry>
    <Geometry x:Key="VerticalLine">M0,0 L1,0</Geometry>
    <Geometry x:Key="LeftRightDiagonalLine">M0,0 L1,1</Geometry>
    <Geometry x:Key="RightLeftDiagonalLine">M1,0 L0,1</Geometry>
    <Geometry x:Key="RightTriangle">M0,0 L0,1 L1,1Z</Geometry>
    <Geometry x:Key="LeftTriangle">M1,0 L1,1 L0,1Z</Geometry>
    <Geometry x:Key="LeftTriangleFlipped">M1,1 L1,0 L0,0Z</Geometry>
    <Geometry x:Key="Gear">M363.6,569.5C355.6,583.4,337.9,588.1,324.0,580.1C310.2,572.1,305.4,554.4,313.4,540.5C321.4,526.7,339.2,521.9,353.0,529.9C366.9,537.9,371.6,555.7,363.6,569.5 M404.4,533.1L390.4,509.0L404.3,478.5L371.9,459.8L352.5,487.1L324.6,487.1L305.1,459.8L272.7,478.5L286.6,509.0L272.7,533.1L239.3,536.3L239.3,573.7L272.7,576.9L286.6,601.1L272.7,631.6L305.1,650.3L324.6,623.0L352.5,623.0L371.9,650.3L404.3,631.6L390.4,601.1L404.4,576.9L437.7,573.7L437.7,536.3z</Geometry>

    <!--
        ***************************************************************************
        Converters
        ***************************************************************************
    -->

    <h:BrushToAlphaBrushConverter x:Key="AlphaConverter_40" Opacity="0.1" />
    <u:PrettyDateConverter x:Key="PrettyDateConverter" />
    <u:PrettyTimeSpanConverter x:Key="PrettyTimeSpanConverter" />
    <h:BoolToDoubleConverter
        x:Key="DimCompleteItemConverter"
        FalseValue="1.0"
        TrueValue="0.25" />
    <h:BoolToDoubleConverter
        x:Key="HalfDimCompleteItemConverter"
        FalseValue="1.0"
        TrueValue="0.5" />
    <h:ReverseBooleanToVisibilityConverter x:Key="ReverseBooleanToVisibilityConverter" />
    <h:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
    <h:DebugConverter x:Key="DebugConverter" />
    <h:FallbackWhenNullConverter x:Key="FallbackWhenNullConverter" />
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

    <!--
        ***************************************************************************
        Control Styles
        ***************************************************************************
    -->

    <Style x:Key="MissingValueTextBlock" TargetType="{x:Type TextBlock}">
        <!--<Setter Property="FontStyle" Value="Italic" />-->
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Opacity" Value="0.5" />
    </Style>

    <!--  CompletedCheckBox  -->

    <Style x:Key="CompletedCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Width="18" Height="18">
                        <Border
                            x:Name="Border"
                            Background="White"
                            BorderBrush="#B1B4B4"
                            BorderThickness="1">
                            <Border
                                x:Name="InnerBorder"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="2" />
                        </Border>
                        <Path
                            x:Name="Checkmark"
                            Width="15"
                            Margin="1,-5,-1,5"
                            Data="M0,0.6 L0.4,1 L1,0"
                            Opacity="0"
                            Stretch="Fill"
                            Stroke="#202020"
                            StrokeThickness="2.5" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Checkmark"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Checkmark"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="InnerBorder" Property="Background" Value="#FBEFF0" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#FF7C8989" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Border" Property="Background" Value="#EEEEEE" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#AAAAAA" />
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DarkTextBox  -->

    <Style x:Key="DarkTextBox" TargetType="{x:Type pl:InfoTextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="#272A2B" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Padding" Value="7,3,7,-3" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pl:InfoTextBox}">
                    <Border
                        x:Name="OuterBorder"
                        BorderBrush="#20FFFFFF"
                        BorderThickness="0"
                        CornerRadius="2">
                        <Border
                            x:Name="BackgroundBorder"
                            Background="#C0FFFFFF"
                            BorderBrush="#80000000"
                            BorderThickness="1"
                            CornerRadius="1">
                            <Grid>
                                <Border
                                    Height="4"
                                    VerticalAlignment="Top"
                                    CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#4000" />
                                            <GradientStop Offset="0.5" Color="#1000" />
                                            <GradientStop Offset="1" Color="#0000" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ScrollViewer x:Name="PART_ContentHost" />
                                <TextBlock
                                    x:Name="Message"
                                    Margin="8,0"
                                    VerticalAlignment="Center"
                                    Foreground="Black"
                                    IsHitTestVisible="False"
                                    Opacity="0.35"
                                    Text="{TemplateBinding TextBoxInfo}" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="h:Attached.IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Message"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="00:00:00.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FFFFFF"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Message"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasText" Value="False" />
                                <Condition Property="IsFocused" Value="True" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Message"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="00:00:00.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FFFFFF"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Message"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Message"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="00:00:00.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FFFFFF"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Message"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                        <ColorAnimation
                                            Storyboard.TargetName="BackgroundBorder"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  OpacityRepeatButton  -->

    <Style x:Key="OpacityRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="#00FF">
                        <ContentPresenter
                            x:Name="cp"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0.5"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="cp" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="cp"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1.0"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="cp"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="cp"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.1"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="cp"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  InvisibleButton  -->

    <Style x:Key="InvisibleButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="Transparent">
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  OpacityButton  -->

    <Style x:Key="OpacityButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="Transparent"
                        Opacity="0.0">
                        <ContentPresenter
                            x:Name="cp"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0.5"
                            RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="cp" Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform Y="1" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="cp"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1.0"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="cp"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1.0"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="Opacity"
                                            Duration="00:00:00.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ScrollSlider  -->

    <Style x:Key="ScrollSliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Height" Value="100" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border
                        BorderBrush="#000000"
                        BorderThickness="1"
                        CornerRadius="2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                <GradientStop Offset="0" Color="#636D70" />
                                <GradientStop Offset="0.5" Color="#4C5559" />
                                <GradientStop Offset="0.5" Color="#3A4245" />
                                <GradientStop Offset="1" Color="#30373A" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Border
                            BorderBrush="#50FFFFFF"
                            BorderThickness="1,1,0,0"
                            CornerRadius="2">
                            <StackPanel Margin="1,0" VerticalAlignment="Center">
                                <Rectangle Height="1" Fill="#A000" />
                                <Rectangle Height="1" Fill="#4FFF" />
                                <Rectangle
                                    Height="1"
                                    Margin="0,1,0,0"
                                    Fill="#A000" />
                                <Rectangle Height="1" Fill="#4FFF" />
                                <Rectangle
                                    Height="1"
                                    Margin="0,1,0,0"
                                    Fill="#A000" />
                                <Rectangle Height="1" Fill="#4FFF" />
                            </StackPanel>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ScrollVerticalSlider" TargetType="{x:Type Slider}">
        <Grid Width="12">
            <Border
                BorderBrush="#40000000"
                BorderThickness="1"
                CornerRadius="2">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="#304f595d" />
                        <GradientStop Offset="1" Color="#3085949A" />
                    </LinearGradientBrush>
                </Border.Background>
                <!--  Border around the x:Name="ScrollSlider"  -->
                <Border
                    Margin="0,0,-2,-2"
                    BorderBrush="#A0000000"
                    BorderThickness="0,0,1,1"
                    CornerRadius="2" />
            </Border>
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="Slider.DecreaseLarge" Style="{StaticResource ScrollSliderButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Opacity="1" Style="{StaticResource ScrollSliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="Slider.IncreaseLarge" Style="{StaticResource ScrollSliderButtonStyle}" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <!--  Style for slider that becomes visible when there are many tasks.  -->
    <Style x:Key="ScrollSlider" TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource ScrollVerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  FlatButton  -->

    <Style x:Key="FlatButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Background="#50323A3D"
                            CornerRadius="2">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#80323A3D"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#A0323A3D"
                                            Duration="00:00:00" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            Duration="00:00:00.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DefaultPopupToggle  -->

    <Style x:Key="DefaultPopupToggle" TargetType="{x:Type c:PopupToggle}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type c:PopupToggle}">
                    <Border
                        x:Name="Border"
                        Background="#00FFC410"
                        CornerRadius="2">
                        <Grid Margin="8,3">
                            <ContentPresenter />
                            <TextBlock
                                x:Name="InformationTextBlock"
                                Style="{StaticResource MissingValueTextBlock}"
                                Text="{TemplateBinding h:Attached.InformationText}"
                                Visibility="Collapsed" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#20FFC410"/>
                        </Trigger>-->
                        <!--<Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#60FFC410"/>
                        </Trigger>-->
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="InformationTextBlock" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Content.Length, RelativeSource={RelativeSource Self}}" Value="0">
                            <Setter TargetName="InformationTextBlock" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  DropDownSelectorButton  -->

    <Style x:Key="DropDownSelectorButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="Padding" Value="18,10" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="Transparent">
                        <Border
                            x:Name="Border"
                            BorderThickness="0,1"
                            SnapsToDevicePixels="true">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#18CCCCCC" />
                                    <GradientStop Offset="1" Color="#60000000" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Border>
                        <Border
                            x:Name="BottomShadow"
                            Height="1"
                            Margin="0,0,0,-1"
                            VerticalAlignment="Bottom"
                            Background="#4000"
                            Visibility="Hidden" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="c:IndexingStackPanel.StackLocation" Value="First">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,4,0,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="c:IndexingStackPanel.StackLocation" Value="Last">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="Tag" Value="First">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,4,0,0" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,0,0,1" />
                        </Trigger>
                        <Trigger Property="Tag" Value="Last">
                            <Setter TargetName="Border" Property="CornerRadius" Value="0,0,4,4" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#131516" />
                                        <GradientStop Offset="1" Color="#131516" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientStop Offset="0" Color="#383b3c" />
                                        <GradientStop Offset="1" Color="#FF000000" />
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="BottomShadow" Property="Visibility" Value="Visible" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  LineScrollBar / LineScrollViewer  -->
    <!--  Note: the content placed in this scrollviewer should have Margin="0,0,85,0"  -->

    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="Border" Background="#B033383A">
                        <Path
                            x:Name="Arrow"
                            Width="6"
                            Height="12"
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            Fill="Black"
                            Opacity="0.5"
                            Stretch="Fill" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Arrow" Property="Opacity" Value="1.0" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Arrow" Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="LineHorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="40" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                        <GradientStop Offset="0" Color="#0033383A" />
                        <GradientStop Offset="1" Color="#4033383A" />
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <RepeatButton
                Grid.Column="1"
                Padding="2,0,-2,0"
                Command="ScrollBar.PageLeftCommand"
                Content="M 4 0 L 4 8 L 0 4 Z"
                Style="{StaticResource ScrollBarLineButton}" />
            <RepeatButton
                Grid.Column="2"
                Padding="-2,0,2,0"
                Command="ScrollBar.PageRightCommand"
                Content="M 0 0 L 4 4 L 0 8 Z"
                Style="{StaticResource ScrollBarLineButton}" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="LineScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource LineHorizontalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LineScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar
                            x:Name="PART_HorizontalScrollBar"
                            Grid.Row="1"
                            Grid.Column="1"
                            HorizontalAlignment="Right"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            Orientation="Horizontal"
                            Style="{StaticResource LineScrollBar}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Value="{TemplateBinding HorizontalOffset}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--
        Menu Default Style
    -->
    <!--  Menu  -->
    <Style x:Key="{x:Type Menu}" TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <StackPanel
                        ClipToBounds="True"
                        IsItemsHost="True"
                        Orientation="Horizontal" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Separator  -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1" />
        <Setter Property="Margin" Value="0,4,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="#888888" BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  TopLevelHeader  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Background="Transparent">
            <Grid>
                <ContentPresenter
                    x:Name="ContentHost"
                    Margin="3,3,3,3"
                    ContentSource="Header"
                    Opacity="0.5"
                    RecognizesAccessKey="True" />
                <Popup
                    Name="Popup"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="-10"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Relative"
                    PopupAnimation="Fade"
                    VerticalOffset="22">
                    <Grid
                        MinWidth="225"
                        Margin="20"
                        SnapsToDevicePixels="True">
                        <Border
                            BorderBrush="Black"
                            BorderThickness="1"
                            CornerRadius="4">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                    <GradientStop Offset="0" Color="#E8383C3E" />
                                    <GradientStop Offset="1" Color="#E8222627" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.Effect>
                                <DropShadowEffect
                                    BlurRadius="15"
                                    Direction="-90"
                                    Opacity="0.5"
                                    ShadowDepth="5" />
                            </Border.Effect>
                        </Border>
                        <StackPanel
                            Margin="1"
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                        <Border
                            Margin="1,1,1,1"
                            BorderBrush="#20FFFFFF"
                            BorderThickness="1"
                            CornerRadius="4"
                            IsHitTestVisible="False" />
                    </Grid>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="ContentHost" Property="Opacity" Value="1.0" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentHost" Property="Opacity" Value="1.0" />
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  TopLevelItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border Name="Border" Background="Transparent">
            <Grid>
                <ContentPresenter
                    x:Name="ContentHost"
                    Margin="3,3,3,3"
                    ContentSource="Header"
                    Opacity="0.5"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="ContentHost" Property="Opacity" Value="1.0" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  SubmenuItem  -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border
            Name="Border"
            MinHeight="32"
            Background="Transparent"
            TextElement.FontSize="16"
            TextElement.FontWeight="Light">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Border
                    Name="Check"
                    Width="13"
                    Height="13"
                    Margin="6,0,6,0"
                    Background="#C0C0C0"
                    BorderBrush="#404040"
                    BorderThickness="1"
                    Visibility="Collapsed">
                    <Path
                        Name="CheckMark"
                        Width="7"
                        Height="7"
                        Data="M 0 0 L 7 7 M 0 7 L 7 0"
                        SnapsToDevicePixels="False"
                        Stroke="#404040"
                        StrokeThickness="2"
                        Visibility="Hidden" />
                </Border>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    Margin="6,10"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    x:Name="InputGestureText"
                    Grid.Column="2"
                    Margin="5,2,0,2"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#131516" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="#888888" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  MenuItem Style  -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Foreground" Value="#FFFFFF" />
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope" Value="true" />
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>